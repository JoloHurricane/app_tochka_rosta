{"ast":null,"code":"var _jsxFileName = \"C:\\\\react projects\\\\reactExpress\\\\client\\\\src\\\\Pages\\\\ArticleContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useHttp } from '../hooks/http.hook';\nimport { Loader } from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ArticleContent(props) {\n  _s();\n\n  const {\n    request,\n    loading\n  } = useHttp();\n  const [article, setArticle] = useState(null);\n  const articleId = useParams().id;\n  const getArticle = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/articles-edit/${articleId}`, 'GET', null);\n      setArticle(fetched);\n    } catch (e) {}\n  }, [articleId, request]);\n  useEffect(() => {\n    getArticle();\n  }, [getArticle]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!loading) {}\n}\n\n_s(ArticleContent, \"ObD3cECbPkI2B4dTCIh697M7zfo=\", false, function () {\n  return [useHttp, useParams];\n});\n\n_c = ArticleContent;\nexport default ArticleContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleContent\");","map":{"version":3,"sources":["C:/react projects/reactExpress/client/src/Pages/ArticleContent.js"],"names":["React","useCallback","useContext","useEffect","useState","useParams","useHttp","Loader","ArticleContent","props","request","loading","article","setArticle","articleId","id","getArticle","fetched","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,SAAzC,EAAoDC,QAApD,QAAmE,OAAnE;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,MAAR,QAAqB,sBAArB;;;AAKA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE3B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBL,OAAO,EAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMU,SAAS,GAAGT,SAAS,GAAGU,EAA9B;AAGA,QAAMC,UAAU,GAAGf,WAAW,CAAC,YAAY;AACvC,QAAI;AACF,YAAMgB,OAAO,GAAG,MAAMP,OAAO,CAAE,sBAAqBI,SAAU,EAAjC,EAAoC,KAApC,EAA2C,IAA3C,CAA7B;AACAD,MAAAA,UAAU,CAACI,OAAD,CAAV;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU,CAAE;AACf,GAL2B,EAKzB,CAACJ,SAAD,EAAaJ,OAAb,CALyB,CAA9B;AAOEP,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,MAAIL,OAAJ,EAAa;AACX,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAG,CAACA,OAAJ,EAAY,CAEX;AAGN;;GA1BQH,c;UAEsBF,O,EAETD,S;;;KAJbG,c;AA4BT,eAAeA,cAAf","sourcesContent":["import React , {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {Loader} from '../components/Loader'\r\n\r\n\r\n\r\n\r\nfunction ArticleContent(props) {\r\n\r\n    const {request, loading} = useHttp()\r\n    const [article, setArticle] = useState(null)\r\n    const articleId = useParams().id\r\n\r\n\r\n    const getArticle = useCallback(async () => {\r\n        try {\r\n          const fetched = await request(`/api/articles-edit/${articleId}`, 'GET', null)\r\n          setArticle(fetched)\r\n        } catch (e) {}\r\n      }, [articleId , request])\r\n    \r\n      useEffect(() => {\r\n        getArticle()\r\n      }, [getArticle])\r\n    \r\n      if (loading) {\r\n        return <Loader />\r\n      }\r\n      if(!loading){\r\n\r\n      }\r\n\r\n   \r\n}\r\n\r\nexport default ArticleContent"]},"metadata":{},"sourceType":"module"}