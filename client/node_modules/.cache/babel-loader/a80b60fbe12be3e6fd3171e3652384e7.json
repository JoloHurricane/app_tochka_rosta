{"ast":null,"code":"import _regeneratorRuntime from\"C:/react projects/reactExpress/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/react projects/reactExpress/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/react projects/reactExpress/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useCallback}from'react';export var useHttp=function useHttp(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var request=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var method,body,headers,contentType,response,data,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:method=_args.length>1&&_args[1]!==undefined?_args[1]:\"GET\";body=_args.length>2&&_args[2]!==undefined?_args[2]:null;headers=_args.length>3&&_args[3]!==undefined?_args[3]:{};contentType=_args.length>4?_args[4]:undefined;setLoading(true);_context.prev=5;if(body&&contentType==='application/json'){body=JSON.stringify(body);headers['Content-type']=contentType;}_context.next=9;return fetch(url,{method:method,body:body,headers:headers});case 9:response=_context.sent;_context.next=12;return response.json();case 12:data=_context.sent;if(response.ok){_context.next=15;break;}throw new Error(data.message||'Что-то пошло не так');case 15:setLoading(false);return _context.abrupt(\"return\",data);case 19:_context.prev=19;_context.t0=_context[\"catch\"](5);setLoading(false);setError(_context.t0.message);throw _context.t0;case 24:case\"end\":return _context.stop();}}},_callee,null,[[5,19]]);}));return function(_x){return _ref.apply(this,arguments);};}(),[]);var clearError=useCallback(function(){return setError(null);},[]);return{loading:loading,request:request,error:error,clearError:clearError};};","map":{"version":3,"sources":["C:/react projects/reactExpress/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","contentType","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError"],"mappings":"qWAAA,OAAQA,QAAR,CAAkBC,WAAlB,KAAoC,OAApC,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAI,eACMF,QAAQ,CAAC,KAAD,CADd,wCAChBG,OADgB,eACRC,UADQ,8BAEEJ,QAAQ,CAAC,IAAD,CAFV,yCAEhBK,KAFgB,eAEVC,QAFU,eAGvB,GAAMC,CAAAA,OAAO,CAAGN,WAAW,0FAC3B,iBAAOO,GAAP,oLAAWC,MAAX,+CAAkB,KAAlB,CAAwBC,IAAxB,+CAA6B,IAA7B,CACAC,OADA,+CACQ,EADR,CACWC,WADX,mCAEIR,UAAU,CAAC,IAAD,CAAV,CAFJ,gBAIQ,GAAIM,IAAI,EAAIE,WAAW,GAAG,kBAA1B,CAA6C,CACzCF,IAAI,CAAGG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAP,CACAC,OAAO,CAAC,cAAD,CAAP,CAA0BC,WAA1B,CAEH,CART,sBAU8BG,CAAAA,KAAK,CAACP,GAAD,CAAK,CAC5BC,MAAM,CAANA,MAD4B,CACpBC,IAAI,CAAJA,IADoB,CACdC,OAAO,CAAPA,OADc,CAAL,CAVnC,QAUcK,QAVd,sCAY2BA,CAAAA,QAAQ,CAACC,IAAT,EAZ3B,SAYcC,IAZd,kBAaYF,QAAQ,CAACG,EAbrB,+BAckB,IAAIC,CAAAA,KAAJ,CAAUF,IAAI,CAACG,OAAL,EAAgB,qBAA1B,CAdlB,SAgBQjB,UAAU,CAAC,KAAD,CAAV,CAhBR,gCAiBec,IAjBf,4DAqBQd,UAAU,CAAC,KAAD,CAAV,CACAE,QAAQ,CAAC,YAAEe,OAAH,CAAR,CAtBR,uFAD2B,+DA0BzB,EA1ByB,CAA3B,CA4BA,GAAMC,CAAAA,UAAU,CAAGrB,WAAW,CAAC,iBAAKK,CAAAA,QAAQ,CAAC,IAAD,CAAb,EAAD,CAAqB,EAArB,CAA9B,CAEA,MAAO,CAACH,OAAO,CAAPA,OAAD,CAASI,OAAO,CAAPA,OAAT,CAAiBF,KAAK,CAALA,KAAjB,CAAuBiB,UAAU,CAAVA,UAAvB,CAAP,CACH,CAlCM","sourcesContent":["import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = ()=>{\r\n    const [loading,setLoading] = useState(false)\r\n    const [error,setError] = useState(null)\r\n    const request = useCallback( \r\n    async (url,method=\"GET\",body=null, \r\n    headers={},contentType)=>{\r\n        setLoading(true)\r\n        try{\r\n            if (body && contentType==='application/json'){\r\n                body = JSON.stringify(body)\r\n                headers['Content-type'] = contentType\r\n          \r\n            }\r\n           \r\n            const response= await fetch(url,{\r\n                method, body, headers})\r\n            const data = await response.json()\r\n            if(!response.ok){\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n            setLoading(false)\r\n            return data\r\n\r\n        }catch(e){\r\n            \r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    },[])\r\n\r\n    const clearError = useCallback(()=> setError(null),[])\r\n\r\n    return {loading,request,error,clearError}\r\n}"]},"metadata":{},"sourceType":"module"}